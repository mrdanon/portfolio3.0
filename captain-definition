{
  "schemaVersion": 2,
  "dockerfileLines": [
    "FROM node:18-alpine AS base",
    "",
    "# Install dependencies only when needed",
    "FROM base AS deps",
    "RUN apk add --no-cache libc6-compat",
    "WORKDIR /app",
    "",
    "# Install dependencies based on the preferred package manager",
    "COPY package.json package-lock.json* ./",
    "RUN npm ci --only=production --legacy-peer-deps",
    "",
    "# Rebuild the source code only when needed",
    "FROM base AS builder",
    "WORKDIR /app",
    "COPY package.json package-lock.json* ./",
    "RUN npm ci --legacy-peer-deps",
    "COPY . .",
    "",
    "# Build Next.js based on the preferred package manager",
    "RUN npm run build",
    "",
    "# Production image, copy all the files and run next",
    "FROM base AS runner",
    "WORKDIR /app",
    "",
    "ENV NODE_ENV production",
    "# Uncomment the following line in case you want to disable telemetry during runtime.",
    "ENV NEXT_TELEMETRY_DISABLED 1",
    "",
    "RUN addgroup --system --gid 1001 nodejs",
    "RUN adduser --system --uid 1001 nextjs",
    "",
    "# Copy the standalone build",
    "COPY --from=builder /app/.next/standalone ./",
    "COPY --from=builder /app/.next/static ./.next/static",
    "COPY --from=builder /app/public ./public",
    "",
    "# Set the correct permission for prerender cache",
    "RUN chown -R nextjs:nodejs .next",
    "",
    "USER nextjs",
    "",
    "EXPOSE 3000",
    "",
    "ENV PORT 3000",
    "ENV HOSTNAME \"0.0.0.0\"",
    "",
    "# Start the application",
    "CMD [\"node\", \"server.js\"]"
  ]
} 